name: Deploy LMS to EC2 via Docker

on:
  push:
    branches: [personal-lms]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env
          echo "R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}" >> .env
          echo "R2_BUCKET_NAME=course-videos" >> .env
          echo "R2_TOKEN=${{ secrets.R2_TOKEN }}" >> .env
          echo "R2_ACCOUNT_ID=${{ secrets.R2_ACCOUNT_ID }}" >> .env
          echo "R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}" >> .env
          echo "R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}" >> .env
          echo "R2_PUBLIC_DOMAIN=videos.nibl.ink" >> .env

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/lms-app .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/lms-app

  deploy:
    runs-on: [self-hosted, ec2]
    needs: build
    steps:
      - name: Stop old container
        run: docker rm -f lms-app-container || true

      - name: Pull latest image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/lms-app

      - name: Run container
        run: |
          docker run -d -p 3000:3000 \
            --name lms-app-container \
            --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/lms-app
