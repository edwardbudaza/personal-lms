name: Deploy LMS to EC2 via Docker

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/lms-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}
            R2_BUCKET_NAME=course-videos
            R2_ACCOUNT_ID=${{ secrets.R2_ACCOUNT_ID }}
            R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}
            R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}
            R2_PUBLIC_DOMAIN=videos.nibl.ink

  deploy:
    runs-on: [self-hosted, ec2]
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create runtime .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.runtime
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.runtime
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.runtime
          echo "R2_ENDPOINT=${{ secrets.R2_ENDPOINT }}" >> .env.runtime
          echo "R2_BUCKET_NAME=course-videos" >> .env.runtime
          echo "R2_ACCOUNT_ID=${{ secrets.R2_ACCOUNT_ID }}" >> .env.runtime
          echo "R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}" >> .env.runtime
          echo "R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}" >> .env.runtime
          echo "R2_TOKEN=${{ secrets.R2_TOKEN }}" >> .env.runtime
          echo "R2_PUBLIC_DOMAIN=videos.nibl.ink" >> .env.runtime
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Stop and remove old container
        run: |
          docker stop lms-app-container || true
          docker rm lms-app-container || true
      
      - name: Pull latest image
        run: docker pull ${{ env.DOCKER_IMAGE }}
      
      - name: Run new container
        run: |
          docker run -d \
            --name lms-app-container \
            --restart unless-stopped \
            -p 3000:3000 \
            --env-file .env.runtime \
            ${{ env.DOCKER_IMAGE }}